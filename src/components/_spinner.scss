/* ==========================================================================
   COMPONENTS / #SPINNER
   ========================================================================== */

// Imports
@import "sky-toolkit-core/tools";

// Settings
$spinner-size: 75px;
$spinner-size-small: $spinner-size - 15px;
$spinner-size-large: $spinner-size + 15px;
$spinner-animation-speed: $global-animation-speed-slow;
$spinner-transition-delay: $global-animation-speed;

/* Spinner
  =========================================== */

/* Base
  ---------------------------------- */

/**
 * 1. Set the size of the spinner to whatever the font size is: much more terse.
 * 2. Defining the colour once and reusing it via `currentColor` is more terse.
 * 3. The border of the spinner should be 0.1× the size of the overall spinner.
 * 4. The spinner is just a ¾-complete circle that rotates.
 * 5. Kellum Method for hiding text: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
 */
.c-spinner {
  display: inline-block;
  width: 1em; /* [1] */
  height: 1em; /* [1] */
  font-size: $spinner-size; /* [1] */
  color: color(brand); /* [2] */
  border: 0.08em solid; /* [3] */
  border-color: transparent currentColor currentColor; /* [2][4] */
  vertical-align: middle;
  overflow: hidden; /* [5] */
  text-indent: 100%; /* [5] */
  border-radius: 100%; /* [4] */
  animation: spin $spinner-animation-speed infinite linear;
  opacity: 1;
  visibility: visible;
  transition: opacity $spinner-animation-speed ease, visibility $spinner-animation-speed ease;
}

/* States
  ---------------------------------- */

/**
 * The spinning indicator uses a stateful `.is-complete` class to provide a
 * default "completed" transition and state.
 * e.g. `<div class="c-spinner  is-complete"></div>`
 *
 * Using the transition defined in .c-spinner, this fades and shrinks the icon.
 */
.c-spinner.is-complete {
  opacity: 0;
  visibility: hidden;
}

/* Modifiers
  ---------------------------------- */

/**
 * Because we set the spinner’s borders using `currentColor`, we can change its
 * text and border colour just by altering `color`.
 *
 * The inversed spinning indicator can be used for darker-coloured UI where the
 * default brand color may not be suitable.
 */
.c-spinner--inverse {
  color: color(white);
}

/**
 * Beacuse we set the spinner’s dimensions in ems, we can change its size just
 * by altering `font-size`.
 *
 * For use in smaller pieces of UI where the default size is too large.
 */
.c-spinner--small {
  font-size: $spinner-size-small;
}

/**
 * For use in larger pieces of UI where the default size is too small.
 */
.c-spinner--large {
  font-size: $spinner-size-large;
}

/* Spinner Overlay
  =========================================== */

/* Base
  ---------------------------------- */

/**
 * The spinning overlay is used to cover any loadable content until complete.
 * Sample background modifiers are provided, but you should create your own
 * modifier to match appropriately.
 *
 * 1. Sets the indicator as visible to transition.
 * 2. Sets a very high z-index to ensure any content is covered.
 */
.c-spinner-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 1; /* [1] */
  visibility: visible; /* [1] */
  z-index: z-index(10); /* [2] */
  transition: opacity $spinner-animation-speed ease, visibility $spinner-animation-speed ease;

  /**
   * Vertically and horizontally centers the indicator to the overlay
   */
  > .c-spinner {
    position: absolute;
    margin: 0 auto;
    top: 50%;
    left: 50%;
    margin-top: round(-$spinner-size / 2);
    margin-left: round(-$spinner-size / 2);
  }

  > .c-spinner--small {
    margin-top: round(-$spinner-size-small / 2);
    margin-left: round(-$spinner-size-small / 2);
  }

  > .c-spinner--large {
    margin-top: round(-$spinner-size-large / 2);
    margin-left: round(-$spinner-size-large / 2);
  }
}

/* States
  ---------------------------------- */

/**
 * The spinning overlay uses a stateful `.is-complete` class to provide a
 * default "completed" transition and state.
 * e.g. `<div class="c-spinner-overlay  is-complete"></div>`
 *
 * Using the transitions defined in `.c-spinner-overlay` and `.c-spinner`, this
 * fades the overlay slightly after the indicator has shrunk.
 */
.c-spinner-overlay.is-complete {
  opacity: 0;
  visibility: hidden;
  transition-delay: $spinner-transition-delay;

  > .c-spinner {
    opacity: 0;
    visibility: hidden;
  }
}

/**
 * The background of the overlay is intentionally simple to extend and modify.
 * If you need to provide a background that matches your web application, just
 * create your own additional class to set it.
 *
 * e.g. `c-spinner-overlay  someprefix-loader-overlay--somemodifier`
 */

/**
 * For overlaying light-coloured UI.
 */
.c-spinner-overlay--light {
  background-color: color(grey-10);
}

/**
 * For overlaying dark-coloured UI.
 */
.c-spinner-overlay--dark {
  background-color: color(grey-50);
}
