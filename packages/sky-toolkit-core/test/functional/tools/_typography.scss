// =============================================================================
// TEST / FUNCTIONAL / TOOLS / TYPOGRAPHY
// =============================================================================

$test-module-area: "Tools / Typography /";

// Functions
// ==============================================

// font-size()
// ------------------------------------

@include test-module("#{$test-module-area} @function font-size") {
  @include test("should return a large font-size value for given key.") {
    $actual: font-size(text-body, large);
    $expected: 18px;

    @include assert-equal($actual, $expected);
  }

  @include test("should return a small font-size value for given key.") {
    $actual: font-size(text-body, small);
    $expected: 16px;

    @include assert-equal($actual, $expected);
  }

  @include test("should return a large font-size value if no variant is provided.") {
    $actual: font-size(text-body);
    $expected: 18px;

    @include assert-equal($actual, $expected);
  }
}

// line-height()
// ------------------------------------

@include test-module("#{$test-module-area} @function line-height") {
  @include test("should return a large line-height value for given key.") {
    $actual: line-height(text-body, large);
    $expected: 1.445;

    @include assert-equal($actual, $expected);
  }

  @include test("should return a small line-height value for given key.") {
    $actual: line-height(text-body, small);
    $expected: 1.5;

    @include assert-equal($actual, $expected);
  }

  @include test("should return a large line-height value if no variant is provided.") {
    $actual: line-height(text-body);
    $expected: 1.445;

    @include assert-equal($actual, $expected);
  }
}

// Mixins
// ==============================================

// @include font
// ------------------------------------

@include test-module("#{$test-module-area} @mixin font") {
  @include test("should return font-size in pixels, font-size in rems and line-height.") {
    @include assert("pixels and rems should be compiled") {
      @include input() {
        @include font(text-body);
      }

      @include expect() {
        font-size: 18px;
        font-size: 1rem;
        line-height: 1.445;
      }
    }
  }

  @include test("should return values for the provided text variant.") {
    @include assert("small font size should be compiled") {
      @include input() {
        @include font(text-body, small);
      }

      @include expect() {
        font-size: 16px;
        font-size: 0.888888889rem;
        line-height: 1.5;
      }
    }
  }
}

// @include rem
// ------------------------------------

@include test-module("#{$test-module-area} @mixin rem") {
  @include test("should return font size in pixels and rems") {
    @include assert("pixels and rems should be compiled") {
      @include input() {
        @include rem(18px);
      }

      @include expect() {
        font-size: 18px;
        font-size: 1rem;
      }
    }
  }
}
