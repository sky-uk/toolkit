/* ==========================================================================
   COMPONENTS / #BUTTONS
   ========================================================================== */

// Imports
@import "sky-toolkit-core/tools";

// Settings
$btn-font-size: font-size(text-body) !default;
$btn-border-width: $global-border-width !default;
$btn-spacing: $global-spacing-unit - $btn-border-width !default;
$btn-border-radius: $global-border-radius !default;
$btn-animation-speed: $global-animation-speed !default;
$btn-animation-speed-fast: $global-animation-speed-fast !default;
$btn-icon-size: $global-spacing-unit !default;
$btn-icon-spacing: $global-spacing-unit-small !default;

/* Base
  ============================================ */

/**
 * Button
 *
 * 1. Allows styling of box model properties.
 * 2. Reset browser styles.
 * 3. Subtract border-width from the padding so buttons don't grow if the
 *    border-width is modified.
 * 4. Tidy alignment for when the button size needs to be modified.
 * 5. Remove anchor text-decoration (necessary when styling `a`s as buttons).
 * 6. Base transparent border for modifiers to alter.
 * 7. Force all button-styled elements to appear clickable.
 */
.c-btn {
  @include height-sizing(fixed);
  display: inline-block; /* [1] */
  margin: 0; /* [2] */
  padding-left: $btn-spacing; /* [3] */
  padding-right: $btn-spacing; /* [3] */
  vertical-align: middle; /* [4] */
  font-size: $btn-font-size;
  font-weight: bold;
  text-align: center;
  text-decoration: none; /* [5] */
  border: $btn-border-width solid transparent; /* [6] */
  border-radius: $btn-border-radius;
  transition: color $btn-animation-speed ease, background-color $btn-animation-speed ease, border-color $btn-animation-speed ease, box-shadow $btn-animation-speed ease;
  cursor: pointer; /* [7] */

  &:hover,
  &:active,
  &:focus {
    text-decoration: none; /* [8] */
    outline: none;
  }

  /**
   * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
   */
  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}

/**
 * Button Icon
 *
 * This enables an icon to be placed to the **left** of a button's text. The
 * icon's colour will be inherited from the component's `color` attribute unless
 * the icon has an explicit `fill` property set.
 *
 * Note: To avoid spacing issues, do *not* add an extra space character between
 *       your button text and image tag.
 *
 * 1. Offset icon from the text baseline to be centered within
      the component.
 * 2. Icons must always conform to a set width and height.
 * 3. Icon should inherit it's fill from the component's text colour.
 */
.c-btn__icon {
  position: relative; /* [1] */
  top: $btn-icon-size / 2; /* [1] */
  margin-right: $btn-icon-spacing;
  width: $btn-icon-size; /* [2] */
  height: $btn-icon-size; /* [2] */
  line-height: inherit; /* [1] */
  vertical-align: top; /* [1] */
  fill: currentColor; /* [3] */
}

/**
 * Button Icon - Right
 *
 * This enables an icon to be placed to the **right** side of a button's text.
 */
.c-btn__icon--right {
  margin-left: $btn-icon-spacing;
  margin-right: 0;
}

/* Modifiers (Cosmetic)
   =========================================== */

/**
 * For buttons that identify as the primary action.
 */
.c-btn--primary {
  color: color(white);
  background-color: color(brand);
  border-color: color(brand);

  &:hover,
  &:active {
    background-color: color(primary-dark);
    border-color: color(primary-dark);
  }

  &:focus {
    @include focus-styles();
  }
}

/**
 * For regular buttons or buttons that identify as a secondary actions.
 */
.c-btn--secondary {
  color: color(brand);
  background-color: transparent;
  border-color: color(primary-dark);

  &:hover,
  &:active {
    color: color(primary-dark);
    border-color: color(primary-dark);
  }

  &:focus {
    @include focus-styles();
  }
}

/**
 * For regular buttons or buttons that identify as a secondary actions.
 * e.g. buttons on a dark panel
 */
.c-btn--secondary-invert {
  color: color(white);
  background-color: transparent;
  border-color: color(white);

  &:hover,
  &:active {
    color: color(text);
    background-color: color(white);
    border-color: color(white);
  }

  &:focus {
    @include focus-styles(invert);
  }
}

/* States
   =========================================== */

/**
 * For buttons whose state is toggled.
 */
.c-btn.is-disabled {
  &,
  &:hover,
  &:active,
  &:focus {
    color: color(white);
    background-color: color(grey-20);
    border-color: color(grey-20);
    cursor: not-allowed;
  }
}

/**
 * For buttons whose state is toggled when a related form or field contains
 * an error or multiple errors.
 */
.c-btn.is-error,
.is-error .c-btn {
  &,
  &:hover,
  &:active,
  &:focus {
    color: color(white);
    background-color: color(error);
    border-color: color(error);
    cursor: not-allowed;
  }
}

/**
 * For inputs used as a select action (`.c-select`).
 * This should be applied as a BEM Mix [A] alongside `.c-select__btn`.
 * e.g. `<span class="c-btn  c-btn--select  c-select__btn">Select</span>`
 *
 * A. https://en.bem.info/forum/4/
 *
 * 1. This should be the same value as the icon width used in _select.scss
 */
.c-btn--select {
  padding-left: 40px;/* [1] */
  padding-right: 40px;/* [1] */
  color: color(brand);
  background-color: transparent;
  border: none;
  transition: all $btn-animation-speed-fast ease;
}

/* Modifiers (Sizing)
   =========================================== */

/**
 * For buttons that need to display full-width.
 */
.c-btn--full {
  display: block;
  width: 100%;
}

/**
 * For buttons that need to display full-width on small devices only.
 */
.c-btn--full\@small {
  @include mq($until: medium) {
    display: block;
    width: 100%;
  }
}
