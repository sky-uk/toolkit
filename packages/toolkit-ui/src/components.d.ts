/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface SkyButton {
      'ariaLabel': string;
      'dataAttributes': any;
      'href': string;
      'iconPos': string;
      'iconSrc': string;
      'innerClass': string;
      'modifier': string;
      'onClick': any;
      'state': string;
      'target': string;
      'text': string;
      'tooltip': boolean;
    }
  }

  interface HTMLSkyButtonElement extends StencilComponents.SkyButton, HTMLStencilElement {}

  var HTMLSkyButtonElement: {
    prototype: HTMLSkyButtonElement;
    new (): HTMLSkyButtonElement;
  };
  interface HTMLElementTagNameMap {
    'sky-button': HTMLSkyButtonElement;
  }
  interface ElementTagNameMap {
    'sky-button': HTMLSkyButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sky-button': JSXElements.SkyButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SkyButtonAttributes extends HTMLAttributes {
      'ariaLabel'?: string;
      'dataAttributes'?: any;
      'href'?: string;
      'iconPos'?: string;
      'iconSrc'?: string;
      'innerClass'?: string;
      'modifier'?: string;
      'onClick'?: any;
      'state'?: string;
      'target'?: string;
      'text'?: string;
      'tooltip'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SkyPanel {
      'className': string;
      'modifier': string;
      'stateModifier': string;
      'text': string;
    }
  }

  interface HTMLSkyPanelElement extends StencilComponents.SkyPanel, HTMLStencilElement {}

  var HTMLSkyPanelElement: {
    prototype: HTMLSkyPanelElement;
    new (): HTMLSkyPanelElement;
  };
  interface HTMLElementTagNameMap {
    'sky-panel': HTMLSkyPanelElement;
  }
  interface ElementTagNameMap {
    'sky-panel': HTMLSkyPanelElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sky-panel': JSXElements.SkyPanelAttributes;
    }
  }
  namespace JSXElements {
    export interface SkyPanelAttributes extends HTMLAttributes {
      'className'?: string;
      'modifier'?: string;
      'stateModifier'?: string;
      'text'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
